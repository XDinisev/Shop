@model IEnumerable<Shop.Business.Models.CustomerViewModel>

@{
	ViewData["Title"] = "List";
}

<h1>Customers</h1>

<p>
	<a asp-action="Create">Create New Customer</a>
</p>

<button style="display: block; margin-top: 1em; margin-bottom: 1em;" class="btn btn-secondary" type="button" data-toggle="collapse" data-target="#filtering">Filtering</button>
<div id="filtering" class="collapse">
	<form asp-controller="Customer" asp-action="Index" method="get" class="col-md-4">
		<input hidden type="text" name="sortOrder" class="form-control" value=@ViewBag.CurrentSort>
		<div class="form-group">
			<label class="form-label">
				First Name
				<input type="text" name="firstNameSearchString" class="form-control" value=@ViewBag.FirstNameSearchString>
			</label>
		</div>
		<div class="form-group">
			<label class="form-label">
				Last Name
				<input type="text" name="lastNameSearchString" class="form-control" value=@ViewBag.LastNameSearchString>
			</label>
		</div>
		<div class="form-group">
			<label class="form-label">
				Username
				<input type="text" name="usernameSearchString" class="form-control" value=@ViewBag.UsernameSearchString>
			</label>
		</div>
		<div class="form-group">
			<input type="submit" value="Search" class="btn btn-secondary" />
		</div>
	</form>
</div>
<table class="table">
	<thead>
		<tr>
			<th>
				@Html.ActionLink(@Html.DisplayNameFor(model => model.FirstName), "Index", new { sortOrder = ViewBag.FirstNameSortToggle, firstNameSearchString = ViewBag.FirstNameSearchString, lastNameSearchString = ViewBag.LastNameSearchString, usernameSearchString = ViewBag.UsernameSearchString})
			</th>
			<th>
				@Html.ActionLink(@Html.DisplayNameFor(model => model.LastName), "Index", new { sortOrder = ViewBag.LastNameSortToggle, firstNameSearchString = ViewBag.FirstNameSearchString, lastNameSearchString = ViewBag.LastNameSearchString, usernameSearchString = ViewBag.UsernameSearchString})
			</th>
			<th>
				@Html.ActionLink(@Html.DisplayNameFor(model => model.Username), "Index", new { sortOrder = ViewBag.UsernameSortToggle, firstNameSearchString = ViewBag.FirstNameSearchString, lastNameSearchString = ViewBag.LastNameSearchString, usernameSearchString = ViewBag.UsernameSearchString})
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model)
		{
			<tr>
				<td>
					@Html.DisplayFor(modelItem => item.FirstName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.LastName)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Username)
				</td>
				<td>
					@Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
					@Html.ActionLink("Details", "Details", new { id=item.Id }) |
					@Html.ActionLink("Delete", "Delete", new { id=item.Id })
				</td>
			</tr>
		}
	</tbody>
</table>
@Html.ActionLink("Previous Page", "Index", new { sortOrder = ViewBag.FirstNameSortToggle, firstNameSearchString = ViewBag.FirstNameSearchString, lastNameSearchString = ViewBag.LastNameSearchString, usernameSearchString = ViewBag.UsernameSearchString, page = ViewBag.PreviousPage}, new { @class="btn btn-primary", style=ViewBag.FirstPage ? "display: none" : "" })
@Html.ActionLink("Next Page", "Index", new { sortOrder = ViewBag.FirstNameSortToggle, firstNameSearchString = ViewBag.FirstNameSearchString, lastNameSearchString = ViewBag.LastNameSearchString, usernameSearchString = ViewBag.UsernameSearchString, page = ViewBag.NextPage}, new { @class="btn btn-primary", style=ViewBag.LastPage ? "display: none" : "" })